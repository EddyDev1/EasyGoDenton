// Debugging Location Class
// For debugging class getters and setters
const location_Debugger = () => {
    console.log("Hello World I am a location debugger\n");
    const myLatitude = 33.23;
    const myLongitude =  32.89;

    const mylocation = new PinLocation(myLatitude, myLongitude);
    let myPin = null;
    let myid = 0;
    let success = false;
    let my_lat_test = 0;
    let my_long_test = 0;

    // my location test
    mylocation.getLocation()
    .then( (result) => {
        myPin = result;
        if (result) {
            console.log(`Latitude: ${myPin.latitude}, Longitude: ${myPin.longitude}\n`);
        }
        else
            console.error("Result is undefined");
    })
    .catch ( (error) => {
        console.error("An error has occured with mylocation.getLocaiton():", error);
    });

    // user id test
    myid = mylocation.get_userid();
    if (myid) {
        console.error("myid is supposed to be null.");
    }
    else
        console.log("myid is null");

    success = mylocation.set_userid(50);
    myid = mylocation.get_userid()
    if (myid) {
        console.log ("myid value is: ", myid);
    }
    else {
        console.error("myid is not reading as not null");
    }

    my_lat_test = mylocation.get_Latitude_Longitude(true);
    if (my_lat_test === myLatitude) {
        console.log("Latitude works");
    }
    else {
        console.error("An error has occured with get_Latitude_Longitude(falsy)");
    }

    my_lat_test = 0;
    my_lat_test = mylocation.get_Latitude_Longitude(false);
    if (my_lat_test == myLongitude) {
        console.log("Longitude works");
    }
    else {
        console.error("An error has occured with long");
    }

    my_lat_test = 0;
    if (mylocation.set_Latitude_Longitude(22.32, true)) {
        console.log("set lat Success");
    }
    else {
        console.error ("An error has occured with set_Latitude_Longitude(22.32)");
    }

    if (mylocation.set_Latitude_Longitude(31.22, false)) {
        console.log("Set long success");
    }
    else {
        console.error("An error has occured with setting longitude");
    }

    mylocation.getLocation()
    .then ( (result) => {
        myPin = result;
        console.log("New latitude: ", myPin.latitude);
        console.log("New longitude: ", myPin.longitude);

    }).catch( (error) => {
        console.log("an error has occured with getting location with the new lat and long values");
    });

    mylocation.set_Latitude_Longitude(myLatitude, true);
    mylocation.set_Latitude_Longitude(myLongitude, false);

    
}

// For debugging writeToFirestore within the class







location_Debugger();